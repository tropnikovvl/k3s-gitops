---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: mastodon
  namespace: home
spec:
  interval: 15m
  chart:
    spec:
      chart: mastodon
      version: 4.0.0
      sourceRef:
        kind: GitRepository
        name: mastodon-charts
        namespace: flux-system
  values:
    image:
      repository: tootsuite/mastodon
      tag: v4.0.2
      pullPolicy: IfNotPresent

    mastodon:
      createAdmin:
        enabled: true
        username: teqqy
        email: ${SECRET_CLOUDFLARE_EMAIL}
      local_domain: mastodon.${SECRET_PUBLIC_DOMAIN}
      web_domain: mastodon.${SECRET_PUBLIC_DOMAIN}
      singleUserMode: true
      s3:
        enabled: true
        access_key: "${SECRET_MINIO_ACCESS_KEY}"
        access_secret: "${SECRET_MINIO_SECRET_KEY}"
        bucket: "mastodon"
        region: "eu-germany-1"
        endpoint: https://s3.${SECRET_DOMAIN}
        hostname: s3.${SECRET_DOMAIN}
      secrets:
        secret_key_base: "${SECRET_MASTODON_SECRET_KEY_BASE}"
        otp_secret: "${SECRET_MASTODON_OTP_SECRET}"
        vapid:
          private_key: "${SECRET_MASTODON_VAPID_PRIVATE_KEY}"
          public_key: "${SECRET_MASTODON_VAPID_PUBLIC_KEY}"
      smtp:
        domain: ${SECRET_PUBLIC_DOMAIN}
        from_address: ${SECRET_MASTODON_SMTP_USER}
        server: ${SECRET_MAIL_HOST}
        port: 587
        login: ${SECRET_MASTODON_SMTP_USER}
        password: ${SECRET_MASTODON_SMTP_PASS}
      streaming:
        port: 4000
      web:
        port: 3000

    ingress:
      enabled: true
      ingressClassName: nginx
      annotations:
        nginx.ingress.kubernetes.io/proxy-body-size: 10m
        external-dns/is-public: "true"
        external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_PUBLIC_DOMAIN}"
        external-dns.home.arpa/enabled: "true"
        cert-manager.io/cluster-issuer: "letsencrypt-production"
      hosts:
        - host: mastodon.${SECRET_PUBLIC_DOMAIN}
          paths:
            - path: '/'
      tls:
        - secretName: mastodon-cert
          hosts:
            - mastodon.${SECRET_PUBLIC_DOMAIN}

    elasticsearch:
      enabled: true

    postgresql:
      enabled: true
      primary:
        persistence:
          enabled: true
          existingClaim: "mastodon-postgres-pvc"
      auth:
        database: mastodon
        username: mastodon
        password: "${SECRET_MASTODON_DB_PASS}"
        postgresPassword: "${SECRET_MASTODON_POSTGRES_POSTGRES_PASSWORD}"

    redis:
      master:
        persistence:
          storageClass: ceph-block
          size: 1Gi
      password: "${SECRET_MASTODON_REDIS_PASSWORD}"
      auth:
        password: "${SECRET_MASTODON_REDIS_PASSWORD}"
      replica:
        replicaCount: 0
    